{"version":3,"sources":["components/NewTodoForm.js","components/Todo.js","components/TodoList.js","index.js"],"names":["NewTodoForm","state","task","handleChange","e","setState","target","value","handleSubmit","preventDefault","newTodo","id","uuid","completed","props","addTodo","className","onSubmit","this","htmlFor","type","placeholder","onChange","React","Component","Todo","isEditing","toggleForm","prevState","handleUpdate","updateTodo","handleToggle","toggleTodo","onClick","handleRemove","TodoList","todos","updatedTask","updatedTodos","map","todo","filter","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51345f68.chunk.js","sourcesContent":["import React from 'react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport '../styles/NewTodoForm.css';\r\n\r\nclass NewTodoForm extends React.Component {\r\n\r\n  state = { task: \"\"}\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      task: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const newTodo = {...this.state, id: uuid(), completed: false};\r\n    this.props.addTodo(newTodo);\r\n    this.setState(()=>({task: \"\"}));\r\n  };\r\n\r\n  render() {\r\n    return(\r\n    <form \r\n      className=\"NewTodoForm\"\r\n      onSubmit={this.handleSubmit}>\r\n      <label htmlFor=\"task\">New Todo</label>\r\n      <input \r\n        type=\"text\"\r\n        value={this.state.task}\r\n        placeholder=\"New Todo\"\r\n        onChange={this.handleChange}\r\n      />\r\n      <button>ADD TODO</button>\r\n    </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewTodoForm;","import React from \"react\";\r\nimport \"../styles/Todo.css\";\r\n\r\nclass Todo extends React.Component {\r\n  state = {\r\n    isEditing: false,\r\n    task: this.props.task,\r\n  };\r\n\r\n  toggleForm = () => {\r\n    this.setState((prevState) => ({ isEditing: !prevState.isEditing }));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      task: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    this.props.updateTodo(this.props.id, this.state.task);\r\n    this.setState((prevState) => ({ isEditing: !prevState.isEditing }));\r\n  };\r\n\r\n  handleToggle = (e) => {\r\n    this.props.toggleTodo(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isEditing ? (\r\n          <div className=\"Todo\">\r\n            <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.task}\r\n                onChange={this.handleChange}\r\n              />\r\n              <button>Save</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div className=\"Todo\">\r\n            <li\r\n              onClick={this.handleToggle}\r\n              className={\r\n                this.props.completed ? \"Todo-task completed\" : \"Todo-task\"\r\n              }\r\n            >\r\n              {this.props.task}\r\n            </li>\r\n            <div className=\"Todo-buttons\">\r\n              <button onClick={this.toggleForm}>\r\n                <i className=\"fas fa-pen\" />\r\n              </button>\r\n              <button\r\n                className=\"Todo-buttons\"\r\n                onClick={(e) => {\r\n                  this.props.handleRemove(this.props.id);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-trash\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport NewTodoForm from './NewTodoForm';\r\nimport Todo from './Todo';\r\nimport '../styles/TodoList.css';\r\n\r\n\r\nclass TodoList extends React.Component {\r\n\r\n  state = {\r\n    todos: []\r\n  }\r\n\r\n  addTodo = (newTodo) => {\r\n    this.setState((prevState) => ({\r\n      todos: [...prevState.todos, newTodo]\r\n    }));\r\n  };\r\n\r\n  updateTodo = (id, updatedTask) => {\r\n    const updatedTodos = this.state.todos.map((todo) => {\r\n      if(todo.id === id) {\r\n        return {...todo, task: updatedTask}\r\n      }\r\n      else {\r\n        return todo;\r\n      }\r\n    });\r\n    this.setState(() => ({ todos: updatedTodos}))\r\n  };\r\n\r\n  toggleTodo = (id) => {\r\n    const updatedTodos = this.state.todos.map((todo) => {\r\n      if(todo.id === id) {\r\n        return {...todo, completed: !todo.completed}\r\n      }\r\n      else {\r\n        return todo;\r\n      }\r\n    });\r\n    this.setState(() => ({ todos: updatedTodos}))\r\n  };\r\n\r\n\r\n  handleRemove = (id) => {\r\n    this.setState(prevState => ({\r\n      todos: prevState.todos.filter(todo => {\r\n        return id !== todo.id;\r\n      })\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const todo = this.state.todos.map((todo) => (\r\n      <Todo \r\n        key={todo.id}\r\n        id={todo.id}\r\n        task={todo.task}\r\n        completed={todo.completed}\r\n        updateTodo={this.updateTodo}\r\n        toggleTodo={this.toggleTodo}\r\n        handleRemove={this.handleRemove}\r\n      />\r\n    ))\r\n    return (\r\n      <div className=\"TodoList\">\r\n        <h1>  \r\n          Todo List! <span>A Simple Todo List App.</span>\r\n        </h1>\r\n        <ul>{ todo }</ul>\r\n        <NewTodoForm \r\n          addTodo={this.addTodo}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './components/TodoList';\nimport './styles/index.css';\n\nReactDOM.render(<TodoList />, document.getElementById('root'));\n\n"],"sourceRoot":""}